#summary Assertion mechanism

= Assertions =

An assertion is a mechanism to express that the developer _thinks_ that a specific condition is always met at some point of the program.

`exceptions4c` provides an assertion mechanism through the macro `e4c_assert`. This is a convenient way to insert debugging assertions into a program. The `NDEBUG` _compile-time_ parameter determines whether the assumptions will be actually verified by the program at _run-time_.

In absence of `NDEBUG`, the assertion statements will be ignored and therefore will have no effect on the program, not even evaluating the condition. Therefore expressions passed to `e4c_assert` must not contain side-effects, since they will not happen when debugging is disabled.

In presence of `NDEBUG`, the assertion statements will verify that the condition is met every time the program reaches that point of the program.

If the assertion does not hold at any time, then an `AssertionException` will be thrown to indicate the programming error. This exception cannot be caught whatsoever. The program (or current thread) will be terminated.

The main advantage of using this assertion mechanism (as opposed to the macros provided by the standard header file `assert.h`) is that before actually exiting the program or thread, all of the pending `finally` blocks will be executed.

----

[http://exceptions4c.googlecode.com/svn/trunk/etc/img/logo/exceptions4c_128.png]